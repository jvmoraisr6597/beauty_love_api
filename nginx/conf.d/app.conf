# --- Usar a próxima configuração quando trabalhando localmente em 
# máquina de desenvolvimento e sem https

server {
    listen 80;
    index index.php index.html;
    error_log  /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
    root /var/www/public;
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass app:9000;
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        gzip_static on;
    }
}


# --- Usar a próxima configuração quando em máquina de staging para forçar uso de https
# --- TODO : Avaliar se ela é segura o suficiente para produção também

# server {
#   listen 80;
#   server_name url.com;
#   rewrite ^ https://$server_name$request_uri permanent;
# }

# server {
#     listen 443 ssl;
#     server_name url.com;
    
#     index index.php index.html;

#     error_log  /var/log/nginx/error.log;
#     access_log /var/log/nginx/access.log;

#     ssl_certificate /etc/nginx/ssl/certificate.crt;
#     ssl_certificate_key /etc/nginx/ssl/private.key;

#     root /var/www/public;
    
#     location ~ \.php$ {
#         try_files $uri =404;
#         fastcgi_split_path_info ^(.+\.php)(/.+)$;
#         fastcgi_pass app:9000;
#         fastcgi_index index.php;
#         include fastcgi_params;
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         fastcgi_param PATH_INFO $fastcgi_path_info;
#     }
#     location / {
#         try_files $uri $uri/ /index.php?$query_string;
#         gzip_static on;
#     }
# }
